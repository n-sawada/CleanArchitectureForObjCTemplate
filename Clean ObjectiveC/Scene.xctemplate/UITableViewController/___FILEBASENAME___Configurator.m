//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean ObjectiveC Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, base on http://clean-swift.com

#import "___FILEBASENAME___Configurator.h"
#import "___FILEBASENAME___ViewController.h"
#import "___FILEBASENAME___Router.h"
#import "___FILEBASENAME___Interactor.h"
#import "___FILEBASENAME___Presenter.h"

@interface ___FILEBASENAME___Interactor (Extension) <___FILEBASENAME___ViewControllerOutput>
@end
@interface ___FILEBASENAME___Presenter (Extension) <___FILEBASENAME___InteractorOutput>
@end
@interface ___FILEBASENAME___ViewController (Extension) <___FILEBASENAME___PresenterOutput>
@end

@interface ___FILEBASENAME___Configurator ()
@end

@implementation ___FILEBASENAME___Configurator

+ (instancetype)sharedInstance {
    static ___FILEBASENAME___Configurator *sharedInstance = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        sharedInstance = [___FILEBASENAME___Configurator new];
    });
    return sharedInstance;
}

- (void)configureViewController:(___FILEBASENAME___ViewController *)viewController {
    
    ___FILEBASENAME___Router *router = [___FILEBASENAME___Router new];
    router.viewController = viewController;
    
    ___FILEBASENAME___Presenter *presenter = [___FILEBASENAME___Presenter new];
    presenter.output = viewController;
    

    ___FILEBASENAME___Interactor *interactor = [___FILEBASENAME___Interactor new];
    interactor.output = presenter;
    
    viewController.output = interactor;    
    viewController.router = router;
}

@end

